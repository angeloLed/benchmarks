version: "2"
services:
  
  ##dotnet
  #dotnet206:
  #  image: microsoft/dotnet:2.0.6-sdk-2.1.104-jessie
  #  depends_on:
  #      - mongodb347
  #  networks:
  #   - public
  #  container_name: "dotnet2.0.6"
  #  volumes:
  #   - ./dotnetcore_cs:/app
  #  ports:
  #   - 8001:80
  #  command: sh -c "cd /app && dotnet publish -c Release -o out && dotnet run"
  #  # command: sh -c "cd /app && dotnet new mvc "

  # #golang
  # golang1101Gin:
  #   image: golang:1.10.1
  #   depends_on:
  #       - mongodb347
  #   networks:
  #    - public
  #   container_name: "golang1.10.1Gin"
  #   volumes:
  #    - ./golang:/go/src/app
  #   ports:
  #    - 8001:80
  #   command: sh -c "cd /go/src/app && go get -d -v ./... && go install -v ./... && go run main.go"

  # #nodejs + express
  # nodejs:
  #   image: node:8.9.4
  #   depends_on:
  #       - mongodb347
  #   networks:
  #    - public
  #   container_name: "nodejs8.9.4"
  #   volumes:
  #    - ./nodejs:/nodejs
  #   ports:
  #    - 8001:80
  #   environment:
  #     - NODE_ENV=production
  #   command: bash -c "cd /nodejs && npm install && npm run serve"

  # #nodejs vanilla
  # nodejsvanilla:
  #   image: node:8.9.4
  #   depends_on:
  #       - mongodb347
  #   networks:
  #    - public
  #   container_name: "nodejsvanilla"
  #   volumes:
  #    - ./nodejs-vanilla:/nodejs
  #   ports:
  #    - 8001:80
  #   environment:
  #     - NODE_ENV=production
  #   command: bash -c "cd /nodejs && npm install && npm run serve"
  
  # # php stack ( Nginx PHP-FPM ): https://github.com/OsLab/docker-php-nginx
  # php72:
  #   image: dockerphp/nginx:7.2-stretch
  #   container_name: "php7.2"
  #   depends_on:
  #       - mongodb347
  #   volumes:
  #       - ./php72/crud:/app/crud
  #       - ./php72/nginx.conf:/etc/nginx/nginx.conf
  #       - ./php72/php.ini:/etc/php5/fpm/php.ini
  #   ports:
  #       - "8001:80"
  #   networks:
  #    - public
  # php72Composer:
  #   image: dockerphp/nginx:7.2-stretch
  #   container_name: "php7.2Composer"
  #   volumes:
  #       - ./php72/crud:/app/crud
  #   networks:
  #    - public
  #   environment:
  #     - COMPOSE_HTTP_TIMEOUT=200
  #   command: bash -c "cd /app/crud && composer update --verbose -o"

  
  #rust
  rust1250:
    image: rust:1.25.0-stretch
    depends_on:
        - mongodb347
    container_name: "rust1.25.0"
    volumes:
     - ./rust:/app
    ports:
     - 8001:80
    environment:
     - USER=usertest
    command: sh -c "cd /app && cargo build --release && ./target/release/real_life_crud"
    #command: sh -c "cargo new /app --bin --vcs none"
  
  #MONGODB
  mongodb347:
    image: mongo:3.4.7
    container_name: "mongodb3.4.7"
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - ./mongodb/db:/data/db
    ports:
      - 27017:27017
